//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(schema_name = "dev", table_name = "system_oauth2_client")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub client_id: String,
    pub secret: String,
    pub name: String,
    pub logo: String,
    pub description: Option<String>,
    pub status: i32,
    pub access_token_validity_seconds: u64,
    pub refresh_token_validity_seconds: u64,
    pub redirect_uris: Vec<String>,
    pub authorized_grant_types: String,
    pub scopes: Vec<String>,
    pub auto_approve_scopes: Vec<String>,
    pub authorities: Vec<String>,
    pub resource_ids: Vec<String>,
    pub additional_information: Option<String>,
    pub creator: Option<String>,
    pub create_time: DateTime,
    pub updater: Option<String>,
    pub update_time: DateTime,
    pub deleted: i16,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
